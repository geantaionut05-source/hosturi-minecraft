<!DOCTYPE html>
<html lang="ro">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Minehant â€” CreeazÄƒ Server</title>
<meta name="description" content="Minehant - CreeazÄƒ server Minecraft (demo).">
<style>
  :root{
    --bg:#0f1113; --card:#16181a; --accent:#00cc77; --muted:#9aa3ad;
  }
  body{margin:0;font-family:Inter,Arial,sans-serif;background:linear-gradient(180deg,#070708,#0f1113);color:#e9f3ff}
  header{display:flex;align-items:center;gap:14px;padding:18px;justify-content:center}
  header img{height:64px;border-radius:8px;background:rgba(255,255,255,0.02);object-fit:contain}
  h1{margin:6px 0 0;font-size:26px;text-align:center}
  .lead{color:var(--muted);text-align:center;margin-top:6px}
  .wrap{max-width:980px;margin:22px auto;padding:0 18px}
  .card{background:linear-gradient(180deg, rgba(255,255,255,0.02), rgba(0,0,0,0.02));border-radius:12px;padding:20px;border:1px solid rgba(255,255,255,0.03);box-shadow:0 10px 30px rgba(0,0,0,0.6)}
  .center{display:flex;flex-direction:column;align-items:center;gap:12px}
  .cta{background:var(--accent);color:#031220;padding:12px 20px;border-radius:10px;font-weight:800;text-decoration:none;border:none;cursor:pointer}
  .cta.ghost{background:transparent;border:1px solid rgba(255,255,255,0.06);color:var(--accent)}
  #ipBox{margin-top:10px;font-size:18px;color:#ffdd57;word-break:break-all}
  .small{font-size:13px;color:var(--muted)}
  .actions{display:flex;gap:10px;flex-wrap:wrap;justify-content:center;margin-top:10px}
  .copyBtn{background:#2b2b2b;color:#fff;padding:8px 12px;border-radius:8px;border:1px solid rgba(255,255,255,0.04);cursor:pointer}
  .status{margin-top:8px;color:var(--muted);font-size:13px}
  footer{margin:26px 0;text-align:center;color:var(--muted);font-size:13px}
  @media(max-width:520px){h1{font-size:20px}}
</style>
</head>
<body>

<header>
  <img src="minehant-logo.png" alt="Minehant logo" onerror="this.style.display='none'">
</header>

<main class="wrap">
  <div class="card center">
    <h1>Minehant â€” CreeazÄƒ server Minecraft</h1>
    <div class="lead">ApasÄƒ butonul pentru a primi un IP (dacÄƒ ai backend VITEZÄ‚, va crea DNS pe Cloudflare).</div>

    <div style="height:18px"></div>

    <div class="center" style="width:100%">
      <button class="cta" id="createBtn">ðŸš€ CreeazÄƒ server</button>

      <div id="ipBox" aria-live="polite"></div>

      <div class="actions">
        <button class="copyBtn" id="copyBtn" style="display:none">CopiazÄƒ IP</button>
        <button class="copyBtn" id="openMcBtn" style="display:none">Deschide Ã®n Minecraft</button>
      </div>

      <div class="status" id="status">Status: aÈ™teptare</div>
    </div>
  </div>
</main>

<footer>
  Â© Minehant â€” Demo. Pentru IP real foloseÈ™te backend + Cloudflare.
</footer>

<script>
/*
  INSTRUCÈšIUNI:
  - DacÄƒ ai backend, pune URL-ul complet Ã®n BACKEND_URL (ex: https://api.minehant.gq/creeaza)
  - DacÄƒ nu, lasÄƒ BACKEND_URL = null È™i scriptul va genera un IP fictiv local.
  - Nu pune token-uri Cloudflare Ã®n front-end! Backend-ul trebuie sÄƒ ruleze separat.
*/
const BACKEND_URL = null; // ex: "https://api.minehant.gq/creeaza"  <- Ã®nlocuieÈ™te dacÄƒ ai backend
const createBtn = document.getElementById('createBtn');
const ipBox = document.getElementById('ipBox');
const copyBtn = document.getElementById('copyBtn');
const openMcBtn = document.getElementById('openMcBtn');
const status = document.getElementById('status');

function fallbackGenerate() {
  const prefixes = ["mc","sv","play","node","srv"];
  const p = prefixes[Math.floor(Math.random()*prefixes.length)];
  const n = Math.floor(Math.random()*900)+100;
  const ports = [25565,19132,25575];
  const port = ports[Math.floor(Math.random()*ports.length)];
  const domain = "minehant.gq";
  return `${p}${n}.${domain}:${port}`;
}

async function createViaBackend() {
  try {
    status.textContent = "Status: trimitere cerere la server...";
    const res = await fetch(BACKEND_URL, { method: 'POST' }); // backend sÄƒ rÄƒspundÄƒ JSON { ip: "..." }
    if (!res.ok) throw new Error('RÄƒspuns non-200 de la backend');
    const json = await res.json();
    if (json.ip) {
      return { ok: true, ip: json.ip };
    } else {
      return { ok:false, error: json.error || 'Format rÄƒspuns invalid' };
    }
  } catch (err) {
    return { ok:false, error: err.message || err };
  }
}

createBtn.addEventListener('click', async () => {
  ipBox.textContent = "";
  copyBtn.style.display = "none";
  openMcBtn.style.display = "none";
  status.textContent = "Status: se proceseazÄƒ...";

  if (BACKEND_URL) {
    const out = await createViaBackend();
    if (out.ok) {
      showIP(out.ip, true);
      status.textContent = "Status: server creat (din backend)";
    } else {
      // fallback local dacÄƒ backend-ul e offline
      const fip = fallbackGenerate();
      showIP(fip, false);
      status.textContent = "Status: backend indisponibil â€” folosit fallback local (simulat)";
      console.error("Backend error:", out.error);
    }
  } else {
    // direct local
    const fip = fallbackGenerate();
    showIP(fip, false);
    status.textContent = "Status: server creat (simulat local)";
  }
});

function showIP(ip, isReal) {
  ipBox.innerHTML = `IP-ul tÄƒu: <b>${ip}</b>`;
  copyBtn.style.display = "inline-block";
  openMcBtn.style.display = "inline-block";
  copyBtn.onclick = () => {
    navigator.clipboard.writeText(ip).then(()=> {
      status.textContent = "Status: IP copiat Ã®n clipboard âœ…";
    }).catch(()=> {
      status.textContent = "Status: Eroare la copiere";
    });
  };
  openMcBtn.onclick = () => {
    // deschide clientul Minecraft (dacÄƒ acceptÄƒ minecraft:// schema)
    // separate pentru Java/BEDROCK â€” aceasta e o Ã®ncercare genericÄƒ
    const parts = ip.split(':');
    const host = parts[0];
    const port = parts[1] || '25565';
    // Ã®ncearcÄƒ deep link (funcÈ›ioneazÄƒ dacÄƒ browser-ul È™i OS-ul au asociere)
    window.location.href = `minecraft://?addExternalServer=Minehant|${host}:${port}`;
    // alternativ, copiem ip pentru utilizator
    navigator.clipboard.writeText(ip).catch(()=>{});
  };
}
</script>
</body>
</html>
